import * as tslib_1 from "tslib";
var OrgEntity = /** @class */ (function () {
    function OrgEntity(orgStructure, parent) {
        var _this = this;
        this.parent = parent;
        var _a = tslib_1.__read(orgStructure), name = _a[0], reports = _a.slice(1);
        this.name = name.split('(')[0].trim();
        var desigMatch = name.match(/\(([^)]+)\)/);
        this.type = desigMatch && desigMatch[1].trim();
        this.children = reports.map(function (r) { return r.substring(1); })
            .reduce(function (previous, current) {
            if (!current.startsWith(' ')) {
                previous.push([]);
            }
            previous[previous.length - 1].push(current);
            return previous;
        }, []).map(function (r) { return new OrgEntity(r, _this); });
    }
    return OrgEntity;
}());
export { OrgEntity };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JnRGF0YS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItb3JnLWNoYXJ0LyIsInNvdXJjZXMiOlsic3JjL2FwcC9tb2R1bGVzL29yZy1jaGFydC9vcmdEYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFNQTtJQUtDLG1CQUFZLFlBQXNCLEVBQUUsTUFBa0I7UUFBdEQsaUJBZUM7UUFkQSxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNmLElBQUEsaUNBQWlDLEVBQWhDLFlBQUksRUFBRSxxQkFBVSxDQUFpQjtRQUN4QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDdEMsSUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsSUFBSSxHQUFHLFVBQVUsSUFBSSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7UUFFL0MsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBZCxDQUFjLENBQUM7YUFDOUMsTUFBTSxDQUFDLFVBQUMsUUFBUSxFQUFFLE9BQU87WUFDekIsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDOUIsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUNuQixDQUFDO1lBQ0QsUUFBUSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzVDLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDakIsQ0FBQyxFQUFjLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLElBQUksU0FBUyxDQUFDLENBQUMsRUFBRSxLQUFJLENBQUMsRUFBdEIsQ0FBc0IsQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFDRixnQkFBQztBQUFELENBQUMsQUFyQkQsSUFxQkMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIE9yZ0RhdGEge1xuXHRuYW1lOiBzdHJpbmc7XG5cdHR5cGU6IHN0cmluZztcblx0Y2hpbGRyZW46IE9yZ0RhdGFbXTtcbn1cblxuZXhwb3J0IGNsYXNzIE9yZ0VudGl0eSBpbXBsZW1lbnRzIE9yZ0RhdGEge1xuXHRuYW1lOiBzdHJpbmc7XG5cdHR5cGU6IHN0cmluZztcblx0Y2hpbGRyZW46IE9yZ0VudGl0eVtdO1xuXHRwYXJlbnQ/OiBPcmdFbnRpdHk7XG5cdGNvbnN0cnVjdG9yKG9yZ1N0cnVjdHVyZTogc3RyaW5nW10sIHBhcmVudD86IE9yZ0VudGl0eSkge1xuXHRcdHRoaXMucGFyZW50ID0gcGFyZW50O1xuXHRcdGNvbnN0IFtuYW1lLCAuLi5yZXBvcnRzXSA9IG9yZ1N0cnVjdHVyZTtcblx0XHR0aGlzLm5hbWUgPSBuYW1lLnNwbGl0KCcoJylbMF0udHJpbSgpO1xuXHRcdGNvbnN0IGRlc2lnTWF0Y2ggPSBuYW1lLm1hdGNoKC9cXCgoW14pXSspXFwpLyk7XG5cdFx0dGhpcy50eXBlID0gZGVzaWdNYXRjaCAmJiBkZXNpZ01hdGNoWzFdLnRyaW0oKTtcblxuXHRcdHRoaXMuY2hpbGRyZW4gPSByZXBvcnRzLm1hcChyID0+IHIuc3Vic3RyaW5nKDEpKVxuXHRcdFx0LnJlZHVjZSgocHJldmlvdXMsIGN1cnJlbnQpID0+IHtcblx0XHRcdFx0aWYgKCFjdXJyZW50LnN0YXJ0c1dpdGgoJyAnKSkge1xuXHRcdFx0XHRcdHByZXZpb3VzLnB1c2goW10pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHByZXZpb3VzW3ByZXZpb3VzLmxlbmd0aCAtIDFdLnB1c2goY3VycmVudCk7XG5cdFx0XHRcdHJldHVybiBwcmV2aW91cztcblx0XHRcdH0sIDxzdHJpbmdbXVtdPltdKS5tYXAociA9PiBuZXcgT3JnRW50aXR5KHIsIHRoaXMpKTtcblx0fVxufVxuIl19